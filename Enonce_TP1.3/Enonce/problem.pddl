
(define (problem prob1)
   (:domain store)
   (:objects A B C D E F G H I p818)
   (:init 
      (agent myAgent)
      (agentAt myAgent E)
      (= (agentLoadWeight myAgent) 0)
      (= (agentMaxLoad myAgent) 5)
      (= (cost) 0)
      (package p818)
      (packageAt p818 A)
      (= (packageWeight p818) 2)
      (packageDest p818 G)
      (node A)
      (connected A C)
      (= (distance A C) 2)
      (node B)
      (connected B C)
      (= (distance B C) 3)
      (node C)
      (connected C A)
      (= (distance C A) 2)
      (connected C B)
      (= (distance C B) 3)
      (connected C D)
      (= (distance C D) 3)
      (connected C H)
      (= (distance C H) 5)
      (node D)
      (connected D C)
      (= (distance D C) 3)
      (connected D E)
      (= (distance D E) 4)
      (connected D F)
      (= (distance D F) 4)
      (node E)
      (connected E D)
      (= (distance E D) 4)
      (node F)
      (connected F D)
      (= (distance F D) 4)
      (node G)
      (connected G H)
      (= (distance G H) 3)
      (node H)
      (connected H C)
      (= (distance H C) 5)
      (connected H G)
      (= (distance H G) 3)
      (connected H I)
      (= (distance H I) 4)
      (node I)
      (connected I H)
      (= (distance I H) 4)
   )

   (:goal (forall (?x) (imply (package ?x) (delivered ?x))))
   (:metric minimize (cost)))
